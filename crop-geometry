#!/bin/bash

# BSD 3-Clause License

# Copyright (c) 2017,2018,2019, Maxim Konakov
# All rights reserved.

# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:

# * Redistributions of source code must retain the above copyright notice, this
#   list of conditions and the following disclaimer.

# * Redistributions in binary form must reproduce the above copyright notice,
#   this list of conditions and the following disclaimer in the documentation
#   and/or other materials provided with the distribution.

# * Neither the name of the copyright holder nor the names of its
#   contributors may be used to endorse or promote products derived from
#   this software without specific prior written permission.

# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
# OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

set -e -o pipefail
shopt -s inherit_errexit

die() {
	echo >&2 "ERROR: $@"
	exit 1
}

usage() {
	cat >&2 <<EOF
Compose crop geometry string for "convert -crop"

Usage:
	$(basename "$0") left% right% top% bottom% input-file-name
where
	"left", "right", "top", and "bottom" (in this order) are percentages
	of the image to crop from the respective sides of the image. The range of
	values is from 0 to 99.99%, with up to 2 digits after the decimal point.
	Percent symbol '%' is optional.
Example:
	$(basename "$0") 19.33 2 3 40% input.pgm
EOF
	exit 1
}

# check parameters
[ $# -eq 5 ] || usage

# input image dimensions
read -r W H < <(identify -format "%w %h\n" "$5")

# read crop values
read_param() {
	local -r VALID='^[0-9]{1,2}(\.[0-9]{,2})?%?$'	# values from 0 to 99.99%

	[[ "$2" =~ $VALID ]] || die "Invalid value for \"$1\": $2"

	case "$1" in
		# https://stackoverflow.com/questions/26861118/rounding-numbers-with-bc-in-bash
		top | bottom)	bc <<< "scale = 2; x = 0.5 + ($H * $2) / 100; scale = 0; x / 1" ;;
		left | right)	bc <<< "scale = 2; x = 0.5 + ($W * $2) / 100; scale = 0; x / 1" ;;
		*) 				die "Unknown image side: \"$1\"" ;;	# this should never happen
	esac
}

declare -r -i	\
	L=$(read_param "left" "$1")		\
	R=$(read_param "right" "$2")	\
	T=$(read_param "top" "$3")		\
	B=$(read_param "bottom" "$4")

# check for empty image
[ $((T + B)) -lt $H -a $((L + R)) -lt $W ] || exec echo "1x1-10-10"	# empty image with warning from `convert`

# finally, compose the string
echo "$((W - L - R))x$((H - T - B))+$L+$T"

# Example command:
#	convert input_file +repage -crop "$(crop-geometry 10 10 10 10 input-file)" +repage $output_file


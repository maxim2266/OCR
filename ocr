#!/usr/bin/env bash

# BSD 3-Clause License

# Copyright (c) 2017,2018,2019, Maxim Konakov
# All rights reserved.

# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:

# * Redistributions of source code must retain the above copyright notice, this
#   list of conditions and the following disclaimer.

# * Redistributions in binary form must reproduce the above copyright notice,
#   this list of conditions and the following disclaimer in the documentation
#   and/or other materials provided with the distribution.

# * Neither the name of the copyright holder nor the names of its
#   contributors may be used to endorse or promote products derived from
#   this software without specific prior written permission.

# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
# OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

# version
declare -r VERSION=0.5.0

# helper functions
_show_usage() {
	cat <<-EOF >&2
	Usage: $0 [OPTION]... DIR
	Extracts text from all image files in DIR.
	Options:
	  -L LANG  document language (optional, default: 'eng')
	  -o FILE  output file name (optional, default output directed to stdout)
	  -e EXT   input files extension (optional, default: pgm)
	  -h       display this help and exit
	  -v       output version information and exit
	EOF
}

_die() {
	echo "ERROR:" "$@" >&2
	exit 1
}

# check tesseract version
[[ -n $(which tesseract) ]] || _die "Program 'tesseract' is not installed"

declare -r TESS_VER=$( tesseract -v 2>&1 | head -q -n 1 | cut -s -d " " -f 2 )

# must have major >= 3
[[ ${TESS_VER%%.[0-9]*} -ge 3 ]] || _die "'tesseract' version $TESS_VER is not supported"

# options
[[ $# -gt 0 ]] || { _show_usage ; exit 1 ; }

while getopts "L:o:e:vh" opt
do
	case $opt in
		L)	OCR_LANG=$OPTARG ;;
		o)	OUT_FILE="$OPTARG" ;;
		e)	EXT="$OPTARG" ;;
		v)	echo v$VERSION ; exit 1 ;;
		h)	_show_usage ; exit 1 ;;
		\?)	exit 1 ;;
	esac
done

shift $((OPTIND-1)) # remove parsed options and args from $@ list
declare -r EXT=${EXT:-pgm}

# input directory
case $# in
	1)	declare -r INPUT_DIR=$(echo "$1" | sed 's:/*$::')	# remove all trailing slashes
		[[ -d "$INPUT_DIR" ]] || _die "Input is not a directory, or it does not exist: \"$INPUT_DIR\""
		[[ -n $(find "$INPUT_DIR" -maxdepth 1 -type f -name \*.$EXT) ]] || _die "No files to process in \"$INPUT_DIR\""
		;;
	0)	declare -r INPUT_DIR=.
		;;
	*)	_die "Cannot process more than one input directory: $@"
		;;
esac

# language
declare -r OCR_LANG=${OCR_LANG:-eng}

# cleanup input directory
find "$INPUT_DIR" -maxdepth 1 -type f \( -name \*.$EXT.err -o -name \*.$EXT.txt \) -delete

# OCR
find "$INPUT_DIR" -maxdepth 1 -type f -name \*.$EXT -print0 | xargs -0 -n 1 -P $(nproc) -I % \
	sh -c "tesseract \"%\" \"%\" -l $OCR_LANG 2>\"%.err\" || exit 255"

if [[ $? -ne 0 ]]
then
	find "$INPUT_DIR" -maxdepth 1 -type f -name \*.$EXT.err -exec grep -i -E '^ERROR:?\s+' "{}" \; >&2
	exit 1
fi

# cleanup
find "$INPUT_DIR" -maxdepth 1 -type f -name \*.$EXT.err -delete

# output redirection
if [[ -n "$OUT_FILE" ]]	# https://stackoverflow.com/a/20564208
then
	exec 1<&-
	exec 1>"$OUT_FILE" || exit 1
fi

# output
find "$INPUT_DIR" -maxdepth 1 -type f -name \*.$EXT.txt -print0 | sort -z | xargs -0 cat


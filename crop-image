#!/usr/bin/env bash

# BSD 3-Clause License

# Copyright (c) 2017,2018,2019,2020, Maxim Konakov
# All rights reserved.

# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:

# * Redistributions of source code must retain the above copyright notice, this
#   list of conditions and the following disclaimer.

# * Redistributions in binary form must reproduce the above copyright notice,
#   this list of conditions and the following disclaimer in the documentation
#   and/or other materials provided with the distribution.

# * Neither the name of the copyright holder nor the names of its
#   contributors may be used to endorse or promote products derived from
#   this software without specific prior written permission.

# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
# OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

# display usage string and exit
exit_with_usage() {
	cat <<-EOF >&2
	Usage: $(basename "$0") [OPTIONS]... FILE

	Crop the borders of the image FILE.
	Options:
	  -{l,r,t,b} N  crop N% of the image from the specified edge; l,r,t,b stand for
	                "left", "right", "top", and "bottom" respectively; valid range
	                of values is from 0% to 99.99%
	  -o FILE       write output to the FILE (optional, default: STDOUT)
	EOF

	exit 1
}

# error exit
die() {
	echo >&2 "$0: $*"
	exit 1
}

# check and set crop value
set-crop-val() {
	local p="$2"

	[[ "$p" =~ ^[[:digit:]]{1,2}(\.[[:digit:]]{,2})?%?$ ]] \
	|| die "invalid patameter for option -$1: \"$p\""

	p="${p%\%}"		# remove trailing '%', if any

	[[ "$p" =~ ^0{1,2}(\.0{,2})?$ ]] && p=0	# convert to proper 0

	eval "${1^^}"='$p'
}

# crop values
L=0; R=0; T=0; B=0

# command line parameters
(( $# > 0 )) || exit_with_usage

while getopts "l:t:r:b:o:h" OPT
do
	case $OPT in
		l|t|r|b) set-crop-val "$OPT" "$OPTARG"
			;;
		o)	OUT="$OPTARG"
			;;
		\?)	exit 1
			;;
	esac
done

shift $(( OPTIND - 1 ))

# input file
IN="$1"

[[ -n "$IN" ]] || die "input file is not specified"

# input image dimensions
read -r W H < <("$(dirname "$0")/image-size" "$IN") || exit 1

# calculations
read -r L R T B < <(bc -q <<-EOF
	scale = 2

	l = 0.5 + ($L * $W) / 100
	r = 0.5 + ($R * $W) / 100
	t = 0.5 + ($T * $H) / 100
	b = 0.5 + ($B * $H) / 100

	scale = 0

	print l/1, " ", $W - r/1 - 1, " ", t/1, " ", $H - b/1 - 1, "\n"
EOF
) || exit 1

# output redirect
if [[ -n "$OUT" ]]; then
	# https://stackoverflow.com/a/20564208
	exec 1<&-
	exec 1>"$OUT" || exit 1
fi

exec pamcut -left "$L" -right "$R" -top "$T" -bottom "$B" "$IN"
